Index: String.cpp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>//\r\n// Created by johen on 17/09/2024.\r\n//\r\n\r\n#include \"String.h\"\r\n\r\nString::String(const char* s) {\r\n\r\n    int initial_size = string_length(s);\r\n    current_cap = initial_size;\r\n    current_size = initial_size;\r\n    data = new char[initial_size]; //erstellt ein neues char array mit der Größe von initial_size\r\n\r\n    string_copy(data, s); //kopiert den Inhalt von s in data\r\n}\r\n\r\nString::~String ()\r\n{\r\n    delete[] data;\r\n}\r\n\r\nint String::string_length(const char *s) const{\r\n    //gibt die Anzahl der char* in s zurück\r\n    int sizeOfString = 0;\r\n    char end = '1';\r\n    while (end != '\\0') {\r\n        sizeOfString++;\r\n        end = s[sizeOfString];\r\n    }\r\n    return sizeOfString;\r\n}\r\n\r\nvoid String::string_copy(char *dest, const char *src) const{\r\n    //kopiert den Inhalt von src in dest\r\n    for (int i = 0; i < capacity(); i++) {\r\n        dest[i] = src[i];\r\n    }\r\n    dest[capacity()] = '\\0';\r\n}\r\n\r\n\r\nvoid String::append(const char* stringToAppend) {\r\n\r\n    int new_string_size = string_length(stringToAppend);\r\n    if (current_size + new_string_size >= current_cap) {\r\n        reserve(current_size + new_string_size);\r\n    }\r\n    string_copy(data + current_size, stringToAppend);\r\n    current_size += new_string_size;\r\n    data[current_size] = '\\0';\r\n\r\n}\r\n\r\nconst char* String::c_str() const {\r\n    //gibt ein char* zurück was alle einzelnen char* aus dem char*[] zusammenfügt\r\n    return data;\r\n\r\n}\r\n\r\nint String::size() const {\r\n    return current_size;\r\n}\r\n\r\nvoid String::reserve(const int new_size) {\r\n    if (new_size >= current_cap) {\r\n        char* new_data = new char[new_size];\r\n        std::cout << \"Length of new Data: \" << string_length(new_data) << std::endl;\r\n        string_copy(new_data, data);\r\n        delete[] data;\r\n        data = new_data;\r\n        std::cout << \"Length of Data: \" << string_length(data) << std::endl;\r\n        current_cap = new_size;\r\n    }\r\n    else {\r\n        std::cout << \"New size is smaller than current size\" << std::endl;\r\n    }\r\n\r\n\r\n}\r\n\r\nint String::capacity() const {\r\n    return current_cap;\r\n}\r\n
===================================================================
diff --git a/String.cpp b/String.cpp
--- a/String.cpp	(revision 3e1d55228cea62dbda6c0aaf9d62b08b0c64852e)
+++ b/String.cpp	(date 1727965122090)
@@ -81,3 +81,5 @@
 int String::capacity() const {
     return current_cap;
 }
+
+
Index: cmake-build-debug/Testing/Temporary/LastTest.log
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>Start testing: Sep 20 09:12 W. Europe Daylight Time\r\n----------------------------------------------------------\r\nEnd testing: Sep 20 09:12 W. Europe Daylight Time\r\n
===================================================================
diff --git a/cmake-build-debug/Testing/Temporary/LastTest.log b/cmake-build-debug/Testing/Temporary/LastTest.log
--- a/cmake-build-debug/Testing/Temporary/LastTest.log	(revision 3e1d55228cea62dbda6c0aaf9d62b08b0c64852e)
+++ b/cmake-build-debug/Testing/Temporary/LastTest.log	(date 1727964352540)
@@ -1,3 +1,3 @@
-Start testing: Sep 20 09:12 W. Europe Daylight Time
+Start testing: Oct 03 16:05 W. Europe Daylight Time
 ----------------------------------------------------------
-End testing: Sep 20 09:12 W. Europe Daylight Time
+End testing: Oct 03 16:05 W. Europe Daylight Time
